
# pascal

'begin'[[:whitespace:][:newline:]]*
'end'[[:whitespace:][:newline:]]*

'if'[[:whitespace:][:newline:]]*
'else'[[:whitespace:][:newline:]]*
'for'[[:whitespace:][:newline:]]*
'while'[[:whitespace:][:newline:]]*
'repeat'[[:whitespace:][:newline:]]*
'until'[[:whitespace:][:newline:]]*
'integer'[[:whitespace:][:newline:]]*
'cardinal'[[:whitespace:][:newline:]]*
'byte'[[:whitespace:][:newline:]]*
'word'[[:whitespace:][:newline:]]*
'char'[[:whitespace:][:newline:]]*
'case'[[:whitespace:][:newline:]]*
'goto'[[:whitespace:][:newline:]]*
'single'[[:whitespace:][:newline:]]*
'double'[[:whitespace:][:newline:]]*
'type'[[:whitespace:][:newline:]]*
'record'[[:whitespace:][:newline:]]*
'exit'[[:whitespace:][:newline:]]*
'object'[[:whitespace:][:newline:]]*
'uses'[[:whitespace:][:newline:]]*
'program'[[:whitespace:][:newline:]]*
'unit'[[:whitespace:][:newline:]]*

# object pascal
'class'[[:whitespace:][:newline:]]*
'interface'[[:whitespace:][:newline:]]*
'virtual'[[:whitespace:][:newline:]]*
'override'[[:whitespace:][:newline:]]*
'overload'[[:whitespace:][:newline:]]*
'inherited'[[:whitespace:][:newline:]]*
'reintroduce'[[:whitespace:][:newline:]]*
'abstract'[[:whitespace:][:newline:]]*
'private'[[:whitespace:][:newline:]]*
'public'[[:whitespace:][:newline:]]*
'protected'[[:whitespace:][:newline:]]*
'published'[[:whitespace:][:newline:]]*
'try'[[:whitespace:][:newline:]]*
'except'[[:whitespace:][:newline:]]*
'finally'[[:whitespace:][:newline:]]*

'sizeof'[[:whitespace:]]*[^[:newline:]]*

'string'[[:whitespace:]]*[^[:newline:]]*
'utf8string'[[:whitespace:]]*[^[:newline:]]*

'TStringList'[[:whitespace:]]*[^[:newline:]]*
'T'[A-Z][A-ZA-z]*

''''[^']*''''                                     LITERAL

'.'[[:whitespace:][:newline:]]*
[[:whitespace:][:newline:]]*                    IGNORE

